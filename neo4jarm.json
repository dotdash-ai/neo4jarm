{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Where to create all resources."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Username for the Virtual Machine."
            }
        },
        "deploymentName": {
            "type": "string",
            "metadata": {
                "description": "Unique name which will be the identifier for this set-up."
            }
        },
        "publicIPAddressType": {
            "type": "string",
            "defaultValue": "Static",
            "metadata": {
                "description": "When restarting the VM do you want the same IP (Static) or doesn't it matter (Dynamic)?"
            },
            "allowedValues": [
                "Static",
                "Dynamic"
            ]
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_F16s_v2",
            "metadata": {
                "description": "Size of the virtual machine."
            },
            "allowedValues": [
                "Standard_A2_v2",
                "Standard_D2_v3",
                "Standard_F16s_v2"
            ]
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "sshPublicKey",
            "allowedValues": [
                "sshPublicKey",
                "password"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
            }
        },
        "adminPasswordOrKey": {
            "type": "securestring",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
            }
        },
        "ubuntuOSVersion": {
            "type": "string",
            "defaultValue": "18.04-LTS",
            "metadata": {
                "description": "The Ubuntu version for deploying the Docker containers. This will pick a fully patched image of this given Ubuntu version."
            },
            "allowedValues": [
                "16.04-LTS",
                "18.04-LTS"
            ]
        }
    },
    "functions": [],
    "variables": {
        "publicIPAddressName": "[concat(parameters('deploymentName'), '-publicIPAddresses')]",
        "publicIPAddressType": "[parameters('publicIPAddressType')]",
        "nsgName": "[concat(parameters('deploymentName'), '-nsg')]",
        "nsgID": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
        "vnName": "[concat(parameters('deploymentName'), '-virtualNetwork')]",
        "vnAddressPrefix": "10.0.0.0/16",
        "vnSubnetName": "Subnet",
        "vnSubnetPrefix": "10.0.0.0/24",
        "nicName": "[concat(parameters('deploymentName'), '-networkInterface')]",
        "vmName": "[concat(parameters('deploymentName'), '-virtualMachine')]",
        "vmPublisher": "Canonical",
        "vmOffer": "UbuntuServer",
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                {
                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                    "keyData": "[parameters('adminPasswordOrKey')]"
                }
                ]
            }
        }
    },
    "resources": [
        {
            "name": "[variables('publicIPAddressName')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "UbuntuVM1-PublicIPAddress"
            },
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[toLower(variables('publicIPAddressName'))]"
                }
            }
        },
        {
            "name": "[variables('nsgName')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "ubuntuVM1-NetworkSecurityGroup"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "neo4j",
                        "properties": {
                            "description": "Allow HTTP connections",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "7474",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "neo4j-ssl",
                        "properties": {
                        "description": "Allow HTTPS connections",
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "7473",
                        "sourceAddressPrefix": "Internet",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 101,
                        "direction": "Inbound"
                        }
                    },
                    {
                        "name": "neo4j-bolt",
                        "properties": {
                        "description": "Allow neo4j bolt db connections",
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "7687",
                        "sourceAddressPrefix": "Internet",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 102,
                        "direction": "Inbound"
                        }
                    },
                    {
                        "name": "neo4j-remote-shell",
                        "properties": {
                        "description": "Remote shell connections",
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "1337",
                        "sourceAddressPrefix": "Internet",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 103,
                        "direction": "Inbound"
                        }
                    },
                    {
                        "name": "neo4j-neodash",
                        "properties": {
                        "description": "Neodash connections",
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "5005",
                        "sourceAddressPrefix": "Internet",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 104,
                        "direction": "Inbound"
                        }
                    },
                    {
                        "name": "ssh",
                        "properties": {
                        "description": "Allow SSH",
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "22",
                        "sourceAddressPrefix": "Internet",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 110,
                        "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('vnName')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[variables('nsgID')]"
            ],
            "tags": {
                "displayName": "ubuntuVM1-VirtualNetwork"
            },
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('vnAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('vnSubnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('vnSubnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[variables('nsgID')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('nicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnName'))]"
            ],
            "tags": {
                "displayName": "ubuntuVM1-NetworkInterface"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnName'), variables('vnSubnetName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('vmName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-03-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            ],
            "tags": {
                "displayName": "ubuntuVM1-VirtualMachine"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[variables('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('vmPublisher')]",
                        "offer": "[variables('vmOffer')]",
                        "sku": "[parameters('ubuntuOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('vmName'),'_OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                }
            }
        },
        {
            "name": "[concat(variables('vmName'), '/dockerInstall')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "apiVersion": "2021-03-01",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "ubuntuVM1-installDocker"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', variables('vmName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Azure.Extensions",
                "type": "CustomScript",
                "typeHandlerVersion": "2.1",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [
                        "https://raw.githubusercontent.com/dotdash-ai/neo4jarm/main/scripts/neo4j_dockercompose_init.sh",
                        "https://raw.githubusercontent.com/dotdash-ai/neo4jarm/main/scripts/docker-compose.yml"
                    ],
                    "commandToExecute": "sh neo4j_dockercompose_init.sh"
                }
            }
        }
    ],
    "outputs": {}
}